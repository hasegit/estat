package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"time"

	yaml "gopkg.in/yaml.v2"
)

type AutoGenerated struct {
	GetStatsList struct {
		Result struct {
			Status   int       `json:"STATUS"`
			ErrorMsg string    `json:"ERROR_MSG"`
			Date     time.Time `json:"DATE"`
		} `json:"RESULT"`
		Parameter struct {
			Lang        string `json:"LANG"`
			SurveyYears int    `json:"SURVEY_YEARS"`
			SearchWord  string `json:"SEARCH_WORD"`
			DataFormat  string `json:"DATA_FORMAT"`
		} `json:"PARAMETER"`
		DatalistInf struct {
			Number    int `json:"NUMBER"`
			ResultInf struct {
				FromNumber int `json:"FROM_NUMBER"`
				ToNumber   int `json:"TO_NUMBER"`
			} `json:"RESULT_INF"`
			TableInf []struct {
				ID       string `json:"@id"`
				StatName struct {
					Code          string `json:"@code"`
					NAMING_FAILED string `json:"$"`
				} `json:"STAT_NAME"`
				GovOrg struct {
					Code          string `json:"@code"`
					NAMING_FAILED string `json:"$"`
				} `json:"GOV_ORG"`
				StatisticsName string `json:"STATISTICS_NAME"`
				Title          string `json:"TITLE"`
				Cycle          string `json:"CYCLE"`
				SurveyDate     string `json:"SURVEY_DATE"`
				OpenDate       string `json:"OPEN_DATE"`
				SmallArea      int    `json:"SMALL_AREA"`
				CollectArea    string `json:"COLLECT_AREA"`
				MainCategory   struct {
					Code          string `json:"@code"`
					NAMING_FAILED string `json:"$"`
				} `json:"MAIN_CATEGORY"`
				SubCategory struct {
					Code          string `json:"@code"`
					NAMING_FAILED string `json:"$"`
				} `json:"SUB_CATEGORY"`
				OverallTotalNumber int    `json:"OVERALL_TOTAL_NUMBER"`
				UpdatedDate        string `json:"UPDATED_DATE"`
				StatisticsNameSpec struct {
					TabulationCategory     string `json:"TABULATION_CATEGORY"`
					TabulationSubCategory1 string `json:"TABULATION_SUB_CATEGORY1"`
					TabulationSubCategory2 string `json:"TABULATION_SUB_CATEGORY2"`
				} `json:"STATISTICS_NAME_SPEC"`
				Description string `json:"DESCRIPTION"`
				TitleSpec   struct {
					TableCategory string `json:"TABLE_CATEGORY"`
					TableName     string `json:"TABLE_NAME"`
				} `json:"TITLE_SPEC"`
			} `json:"TABLE_INF"`
		} `json:"DATALIST_INF"`
	} `json:"GET_STATS_LIST"`
}

func main() {

	f, err := os.Open("cred.yaml")
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()

	d := yaml.NewDecoder(f)

	var m map[string]interface{}
	if err := d.Decode(&m); err != nil {
		log.Fatal(err)
	}
	appId := m["appId"].(string)

	request, err := http.NewRequest(http.MethodGet, "https://api.e-stat.go.jp/rest/3.0/app/json/getStatsList", nil)
	if err != nil {
		log.Fatal(err)
	}
	params := request.URL.Query()
	params.Add("appId", appId)
	//params.Add("lang", "E")
	params.Add("surveyYears", "202102")
	params.Add("searchWord", "東京")
	request.URL.RawQuery = params.Encode()

	client := &http.Client{}
	response, err := client.Do(request)
	if err != nil {
		log.Fatal(err)
	}
	defer response.Body.Close()

	body, err := ioutil.ReadAll(response.Body)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println(string(body))
	var hoi AutoGenerated
	err = json.Unmarshal(body, &hoi)
	for _, inf := range hoi.GetStatsList.DatalistInf.TableInf {
		fmt.Println(inf.SubCategory)
	}
}
